import React, {useState} from 'react'
import './LandingPage.css';
import LogoImage from '../photos/GastosKo.png'
import Button from 'react-bootstrap/Button';
import Form from 'react-bootstrap/Form';
import FormLabel from 'react-bootstrap/FormLabel'
import { FaUser, FaEnvelope, FaLock } from 'react-icons/fa6';
import axios from "axios";

const baseURL = 'http://localhost:5050/api/users';
const LandingPage = () => {
  const initialFormData = {
    username: '',
    email: '',
    password: '',
    confirmPassword: '',
  };

  const [formData, setFormData] = useState(initialFormData);
  const [errorMessages, setErrorMessages] = useState([]);
  const [successMessage, setSuccessMessage] = useState('');
  const [isRegistering, setIsRegistering] = useState(initialFormData);

  function handleInputChange(event) {
    const { name, value } = event.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  }
function toggleForm(){
  setIsRegistering(!isRegistering);
  setErrorMessages([]);
    setSuccessMessage('');
    setFormData(initialFormData);
}
  function register(event) {
    event.preventDefault();
if (isRegistering){
    if (formData.password !== formData.confirmPassword) {
      alert('Passwords do not match');
      return;
    }

    if (!formData.email.includes('@')) {
      alert('Invalid email address.');
      return;
    }

    axios
      .post(`${baseURL}/register`, formData)
      .then((response) => {
        console.log(response.data); // Handle success
        setSuccessMessage('Registration successful.');
        setFormData(initialFormData); // Clear form fields
      })
      .catch((error) => {
        console.error(error); // Handle error
        alert('Registration failed. Please try again.');
      });
  } else{
    //login
  }
} 

  return (
    <div>
        <div className="landing-description">c
          <div className="landing-container">
           <h1 className="title">Track your Expenses with <span className="app">GastosKo</span></h1>
           <div className="paragraph-container">
            <p className="title-description">GastosKo literally translate to My Expenses. This project demonstrates how users may use data analytics to analyze their costs throughout the day, week, and month, allowing them to understand where their money is going and make plans for how they should utilize it towards the future.</p>
            </div>
          </div>
          <div><img className="img" src={LogoImage} alt="My Logo" /></div>
        </div>
        <div className="register">
          <div className="login-container">
            <div className="login-description-container">
              {/*<div className="login-description">
                <h1 className="title-register">Track Your Expenses with GastosKo</h1>
                <div className="login-content-container">
                <h4>Already have an Account?</h4>
                <br />
                <a className='login-link'>Login</a>
              </div>
              </div>*/}
          </div>  
        </div>
        <div className="register-container">
          <div className="register-title">Create Account</div>
          <div className="register-form-container">
          {/*<Form>
          <Form.Group className="mb-4" controlId="username">
          <div className="input-container">
            <FaUser className="input-icon" />
            <Form.Control
              type="username"
              name="username"
              placeholder="Enter username"
              className="register-forms"
              value={formData.username}
              onChange={handleInputChange}
            />
          </div>
        </Form.Group>
        <Form.Group className="mb-4" controlId="email">
          <div className="input-container">
            <FaEnvelope className="input-icon" />
            <Form.Control
              type="email"
              name="email"
              placeholder="Enter email"
              className="register-forms"
              value={formData.email}
              onChange={handleInputChange}
            />
          </div>
        </Form.Group>

        <Form.Group className="mb-3" controlId="password">
          <div className="input-container">
            <FaLock className="input-icon" />
            <Form.Control
              type="password"
              name="password"
              placeholder="Password"
              className="register-forms"
              value={formData.password}
              onChange={handleInputChange}
            />
          </div>
        </Form.Group>

           <Form.Group className="mb-3" controlId="confirmPassword">
           <div className="input-container">
           <FaLock className="input-icon" />
              <Form.Control 
              type="password" 
              name="confirmPassword"
              placeholder="Confirm Password" 
              className="register-forms"
              value={formData.confirmPassword}
              onChange={handleInputChange}
              />
              </div>
           </Form.Group>
           <Button 
           variant="primary" 
           type="submit"
           className="register-button" 
           onClick={register}
           >
             Signup
            </Button>
            {successMessage && (
            <div className="success-message">{successMessage}</div>
          )}
          </Form> */}
          </div>
        </div>
    </div>
    </div>
  )
}

export default LandingPage